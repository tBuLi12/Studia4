-- User => lista(id przedmiotów, nazwy przedmiotów)
--hardcoded:  'student'
SELECT Sbj.subject_id, Sbj.name
FROM Users usr, Student S, Subject Sbj, Stud_subjects Stud_sbj
WHERE usr.username like 'student' 
AND S.person = usr.person 
AND S.person=Stud_sbj.student 
AND Stud_sbj.subject=Sbj.subject_id;

-- CLASSES --
--user => lista (id zajęć, nazwa, rodzaj, pokój, kiedy są)
--hardcoded: 'student'

SELECT cl.id_classes, sub.name, cl.class_type, cr.room_nr, ts.week_day, ts.time_slot
    FROM Users usr
    inner join Student s on s.person = usr.person
    inner join Stud_classes st_cl on st_cl.student = s.person
    inner join Classes cl on cl.id_classes = st_cl.id_classes
    inner join Subject sub on sub.subject_id = cl.subject
    inner join Classroom cr on cr.room_id = cl.class_room
    inner join time_slots ts on ts.time_slot_id = cl.time_slot_id
    where usr.username like 'student';

-- ALTERNATIVES --
--id zajęc => lista (wszystkie terminy tych zajęć)
--hardcoded: '3'
SELECT ts.week_day, ts.time_slot
FROM (SELECT subject, class_type FROM Classes WHERE id_classes = 3) current_class, Classes Cl
JOIN time_slots ts using (time_slot_id)
WHERE Cl.subject = current_class.subject AND Cl.class_type = current_class.class_type;


-- DEL REQUEST --
--id requestu o zmianę ~> kasuj to
--hardcoded: 1
DELETE FROM request_change_group req WHERE req.request_id = 1;

-- REQUESTS --
--// user to jakiś pracownik, "kto" to jakiś student
--// to mają być te requesty, które dotyczą zmiany zajęć które moderuje pan user
--user => lista (id requestu, nazwa zajęc, typ zajęć, kto, na kiedy)
--hardcoded: 'admin'
SELECT req.request_id, sub.name, cl.class_type, req.student, ts.week_day, ts.time_slot
FROM request_change_group req
JOIN Classes cl on req.new_classes_id = cl.id_classes
JOIN Subject sub on cl.subject = sub.subject_id
JOIN Users usr on usr.person = sub.coordinator
JOIN Time_slots ts on ts.time_slot_id = cl.time_slot_id
WHERE usr.username = 'admin';